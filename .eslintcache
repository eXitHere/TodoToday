[{"/mnt/d/project/TodoToday/src/index.js":"1","/mnt/d/project/TodoToday/src/reportWebVitals.js":"2","/mnt/d/project/TodoToday/src/App.js":"3","/mnt/d/project/TodoToday/src/ErrorBoundary.js":"4","/mnt/d/project/TodoToday/src/Components/Header.js":"5","/mnt/d/project/TodoToday/src/Components/Todo.js":"6","/mnt/d/project/TodoToday/src/DateController.js":"7","/home/exit/projects/TodoToday/src/index.js":"8","/home/exit/projects/TodoToday/src/reportWebVitals.js":"9","/home/exit/projects/TodoToday/src/App.js":"10","/home/exit/projects/TodoToday/src/ErrorBoundary.js":"11","/home/exit/projects/TodoToday/src/Components/Header.js":"12","/home/exit/projects/TodoToday/src/Components/Todo.js":"13","/home/exit/projects/TodoToday/src/DateController.js":"14","/home/exit/projects/TodoToday/src/Database/DatabaseController.js":"15"},{"size":505,"mtime":1610550553936,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1609334295530,"results":"18","hashOfConfig":"17"},{"size":729,"mtime":1610552520686,"results":"19","hashOfConfig":"17"},{"size":698,"mtime":1610639453253,"results":"20","hashOfConfig":"17"},{"size":1670,"mtime":1610551648146,"results":"21","hashOfConfig":"17"},{"size":6464,"mtime":1610560349508,"results":"22","hashOfConfig":"17"},{"size":1190,"mtime":1610552372831,"results":"23","hashOfConfig":"17"},{"size":505,"mtime":1610640704930,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1610640704930,"results":"26","hashOfConfig":"25"},{"size":989,"mtime":1610807881151,"results":"27","hashOfConfig":"25"},{"size":666,"mtime":1610640704930,"results":"28","hashOfConfig":"25"},{"size":1607,"mtime":1610640704930,"results":"29","hashOfConfig":"25"},{"size":6255,"mtime":1610640704930,"results":"30","hashOfConfig":"25"},{"size":1132,"mtime":1610640704930,"results":"31","hashOfConfig":"25"},{"size":3281,"mtime":1610807670881,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"14dx1pk",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"bvehy",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},"/mnt/d/project/TodoToday/src/index.js",[],["67","68"],"/mnt/d/project/TodoToday/src/reportWebVitals.js",[],"/mnt/d/project/TodoToday/src/App.js",[],"/mnt/d/project/TodoToday/src/ErrorBoundary.js",[],"/mnt/d/project/TodoToday/src/Components/Header.js",[],"/mnt/d/project/TodoToday/src/Components/Todo.js",[],"/mnt/d/project/TodoToday/src/DateController.js",[],"/home/exit/projects/TodoToday/src/index.js",[],["69","70"],"/home/exit/projects/TodoToday/src/reportWebVitals.js",[],"/home/exit/projects/TodoToday/src/App.js",[],"/home/exit/projects/TodoToday/src/ErrorBoundary.js",[],"/home/exit/projects/TodoToday/src/Components/Header.js",[],"/home/exit/projects/TodoToday/src/Components/Todo.js",[],"/home/exit/projects/TodoToday/src/DateController.js",[],["71","72"],"/home/exit/projects/TodoToday/src/Database/DatabaseController.js",["73"],"var {Database} = require('sqlite3');\nconst Promise = require('bluebird');\n\n/*\n* date: TEXT (1/13/2021)\n* data: TEXT (json to string)\n*/\n\nclass dbManager {\n  constructor(dbFilePath) {\n    this.db = new Database(dbFilePath,  (err) => {\n      if(err) {\n        console.log('Can\\'t connect to database', err);\n      }\n      else {\n        console.log('Connected to database');\n      }\n    })\n  }\n\n  run(sql, params =[]) {\n    return new Promise((resolve, reject) => {\n      this.db.run(sql, params, function (err) {\n        if(err) {\n          console.log('Err running sql ', sql, err);\n          reject(err);\n        }\n        else {\n          resolve({id: this.lastID});\n        }\n      })\n    })\n  }\n\n  // id INTEGER PRIMARY KEY AUTOINCREMENT,\n  createTable() {\n    const sql = `\n      CREATE TABLE IF NOT EXISTS todos (\n        date TEXT PRIMARY KEY,\n        data TEXT\n      )\n    `\n    return this.run(sql);\n  }\n  \n  get(sql, params = []) {\n    return new Promise((resolve, reject) => {\n      this.db.get(sql, params, (err, result) => {\n        if(err) {\n          console.log('Err running sql ', sql, err);\n          reject(err);\n        }\n        else {\n          resolve(result);\n        }\n      })\n    })\n  }\n  \n  all(sql, params = []) {\n    return new Promise((resolve, reject) => {\n      this.db.all(sql, params, (err, rows) => {\n        if(err) {\n          console.log('Err running sql ', sql, err);\n          reject(err);\n        }\n        else {\n          resolve(rows);\n        }\n      })\n    })\n  }\n\n\n  create(date, data) {\n    return this.run(`\n      INSERT INTO todos (date, data) VALUES (?, ?) \n      ON CONFLICT(date)\n      DO UPDATE SET data = excluded.data \n    `, [date, data]);\n  }\n\n  update(date, data) {\n    return this.run(`\n      UPDATE todos SET data = ? WHERE date = ?\n    `, [data, date]);\n  }\n\n  delete(date) {\n    return this.run(`\n      DELETE FROM todos WHERE date = ?\n    `, [date]);\n  }\n\n  getByDate(date) {\n    return this.get(`\n      SELECT * FROM todos WHERE date = ?\n    `, [date]);\n  }\n\n  getAll() {\n    return this.all(`\n      SELECT * FROM todos\n    `);\n  }\n\n\n}\n\n\nasync function InsertOrUpdate(date, data) {\n  // const db = await new dbManager('./test.sqlite3');\n  const today = new Date()\n  const tomorrow = new Date(today)\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  console.log(tomorrow.toLocaleDateString())\n  db.createTable()\n  .then(() => db.create(date, JSON.stringify(data))\n  .then(() => db.getAll())\n  .then((result) => (console.log(result))));\n}\n\nasync function getData(date) {\n  return new Promise((resolve, reject) => {\n    try {\n      db.getByDate(date)\n        .then((result) => {resolve(result)});\n    }\n    catch (e) {\n      reject(e);\n    }\n  })\n}\n\nvar db;\nasync function init() {\n  return new Promise((resolve, reject) => {\n    try {\n      db = new dbManager('./test.sqlite3');\n      db.createTable().then(() => {\n        resolve('Success!');\n      })\n    }\n    catch (e) {\n      reject(e);\n    }\n  })\n}\n\nasync function main() {\n  init()\n    .then(() => {\n      InsertOrUpdate(new Date().toLocaleDateString(), {A: 'B', B: 'E'})\n        .then(() => {\n          getData(new Date().toLocaleDateString()).then((result) => console.log(result));\n        })\n    })\n  \n}\n\nmodule.exports = {\n  init,\n  InsertOrUpdate,\n  getData\n};",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":150,"column":16,"nodeType":"84","messageId":"85","endLine":150,"endColumn":20},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],["86"],["87"],"no-unused-vars","'main' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]